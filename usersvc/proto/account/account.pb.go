// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/baddayduck/services/usersvc/proto/account/account.proto

/*
Package account is a generated protocol buffer package.

It is generated from these files:
	github.com/baddayduck/services/usersvc/proto/account/account.proto

It has these top-level messages:
	User
	CreateRequest
	CreateResponse
	ReadRequest
	ReadResponse
*/
package account

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type User struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Email    string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	Created  int64  `protobuf:"varint,4,opt,name=created" json:"created,omitempty"`
	Updated  int64  `protobuf:"varint,5,opt,name=updated" json:"updated,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *User) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

type CreateRequest struct {
	User     *User  `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *CreateRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type CreateResponse struct {
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type ReadRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReadResponse struct {
	User *User `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReadResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "User")
	proto.RegisterType((*CreateRequest)(nil), "CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "CreateResponse")
	proto.RegisterType((*ReadRequest)(nil), "ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "ReadResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Account service

type AccountClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
}

type accountClient struct {
	c           client.Client
	serviceName string
}

func NewAccountClient(serviceName string, c client.Client) AccountClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "account"
	}
	return &accountClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *accountClient) Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Account.Create", in)
	out := new(CreateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Account.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Account service

type AccountHandler interface {
	Create(context.Context, *CreateRequest, *CreateResponse) error
	Read(context.Context, *ReadRequest, *ReadResponse) error
}

func RegisterAccountHandler(s server.Server, hdlr AccountHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Account{hdlr}, opts...))
}

type Account struct {
	AccountHandler
}

func (h *Account) Create(ctx context.Context, in *CreateRequest, out *CreateResponse) error {
	return h.AccountHandler.Create(ctx, in, out)
}

func (h *Account) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.AccountHandler.Read(ctx, in, out)
}

func init() {
	proto.RegisterFile("github.com/baddayduck/services/usersvc/proto/account/account.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 283 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0x5f, 0x4b, 0xc3, 0x30,
	0x14, 0xc5, 0xf7, 0xa7, 0xdd, 0xf4, 0x6e, 0xab, 0x12, 0x7c, 0xa8, 0x05, 0x61, 0x04, 0x84, 0x89,
	0x90, 0xc2, 0xfc, 0x04, 0x2a, 0xf8, 0x01, 0x0a, 0x3e, 0xfa, 0x90, 0x26, 0x17, 0x2d, 0xda, 0xa6,
	0x26, 0xcd, 0x44, 0xf0, 0xc3, 0x4b, 0x12, 0x23, 0x73, 0x0f, 0x3e, 0x95, 0x73, 0xce, 0xed, 0x3d,
	0xbf, 0x24, 0x70, 0xf7, 0xdc, 0x0c, 0x2f, 0xb6, 0x66, 0x42, 0xb5, 0x65, 0xcd, 0xa5, 0xe4, 0x9f,
	0xd2, 0x8a, 0xd7, 0xd2, 0xa0, 0xde, 0x35, 0x02, 0x4d, 0x69, 0x0d, 0x6a, 0xb3, 0x13, 0x65, 0xaf,
	0xd5, 0xa0, 0x4a, 0x2e, 0x84, 0xb2, 0xdd, 0x10, 0xbf, 0xcc, 0xbb, 0xf4, 0x0b, 0x92, 0x47, 0x83,
	0x9a, 0x64, 0x30, 0x69, 0x64, 0x3e, 0x5e, 0x8f, 0x37, 0xc7, 0xd5, 0xa4, 0x91, 0xa4, 0x80, 0x23,
	0xf7, 0x7b, 0xc7, 0x5b, 0xcc, 0x27, 0xde, 0xfd, 0xd5, 0xe4, 0x0c, 0x52, 0x6c, 0x79, 0xf3, 0x96,
	0x4f, 0x7d, 0x10, 0x04, 0xc9, 0x61, 0x2e, 0x34, 0xf2, 0x01, 0x65, 0x9e, 0xac, 0xc7, 0x9b, 0x69,
	0x15, 0xa5, 0x4b, 0x6c, 0x2f, 0x7d, 0x92, 0x86, 0xe4, 0x47, 0xd2, 0x07, 0x58, 0xdd, 0xfb, 0xa1,
	0x0a, 0xdf, 0x2d, 0x9a, 0x81, 0x9c, 0x43, 0xe2, 0x6a, 0x3c, 0xc8, 0x62, 0x9b, 0x32, 0xc7, 0x56,
	0x79, 0xcb, 0x11, 0xf5, 0xdc, 0x98, 0x0f, 0xa5, 0x65, 0x24, 0x8a, 0x9a, 0x9e, 0x42, 0x16, 0xf7,
	0x98, 0x5e, 0x75, 0x06, 0xe9, 0x05, 0x2c, 0x2a, 0xe4, 0x32, 0xee, 0x3d, 0x38, 0x1e, 0xbd, 0x82,
	0x65, 0x88, 0xc3, 0xf8, 0x3f, 0xbd, 0xdb, 0x27, 0x98, 0xdf, 0x86, 0x2b, 0x23, 0xd7, 0x30, 0x0b,
	0x35, 0x24, 0x63, 0x7f, 0xb8, 0x8b, 0x13, 0x76, 0xd0, 0x3f, 0x22, 0x97, 0x90, 0xb8, 0x0a, 0xb2,
	0x64, 0x7b, 0x20, 0xc5, 0x8a, 0xed, 0xf7, 0xd2, 0x51, 0x3d, 0xf3, 0xef, 0x70, 0xf3, 0x1d, 0x00,
	0x00, 0xff, 0xff, 0x8c, 0xdb, 0x9e, 0x9b, 0xcd, 0x01, 0x00, 0x00,
}
